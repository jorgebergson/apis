openapi: 3.0.2
info:
  title: Loja Franca
  version: v1
  description: |- 
    ### API
    A `API INTEGRA LOJA FRANCA` é disponibilizada através de serviço `HTTP REST`, oferencendo operações para o processo de vendas das Lojas Francas de Fronteira.
    <br> Consolidamos aqui as informações técnicas para a integração dos sistemas próprios das lojas francas com os serviços da Receita Federal do Brasil para as Lojas Francas de Fronteira.
    <br> Todos os serviços seguem o mesmo protocolo de acesso, baseado nas instruções de uso e contratação do serviço API Serpro. A API do Loja Franca de Fronteira foi desenvolvida baseada na arquitetura `HTTP REST`. Ela trabalha exclusivamente com o formato JSON.
    <br> A API usa o formato `UTF-8`. 
    <br> Destacamos que o sistema foi implementado recentemente para as lojas francas prepararem as adaptações necessárias aos seus sistemas próprios, podendo ainda ocorrer instabilidades pontuais. Caso haja dúvidas relacionadas à API do Loja Franca de Fronteira ou para problemas relacionados à TI, entre em contato com a Central Serpro de Atendimento.
    <br>  Esperamos que a API do Loja Franca de Fronteira melhore o ambiente de negócios das lojas francas, viabilizando a operação das lojas, aumentando a competitividade e diminuindo os custos acessórios envolvidos.
    <br>   
    ### Autenticação
    Para testar o ambiente de degustação da API, não é necessário realizar contratação prévia. O arquivo com as credenciais de acesso, informações de fluxo e exemplos podem ser solicitadas através do formulário de atendimento no link abaixo:
    <br>https://atendimento.serpro.gov.br/integralojafranca/credenciais
    <br> No ambiente produtivo, para garantir a identificação e a segurança da origem da informação, toda requisição à API deve seguir três processos:
    <br> 1) Assinar a requisição com o seu conteúdo anexado mediante a utilização do certificado digital e-CNPJ (cadeia ICP Brasil) da contratante;
    <br> 2) Submeter a mensagem assinada mediante a apresentação da chave de acesso da API gateway válida (gerada a partir das credencias disponibilizadas no portal do cliente para cada CNPJ) e
    <br> 3) Verificar a assinatura da requisição, checando se o certificado é válido e não revogado.
    <br> Assim, a cada requisição realizada, haverá Validação de Origem que realizará o batimento entre o CNPJ Comercial (CNPJ vinculado as credencias do portal do cliente), CNPJ de Autenticidade (CNPJ assinante da requisição) garantido a irretratabilidade (não repúdio) no nível em cada requisição.
    <br> https://servicos.serpro.gov.br/api-serpro/biblioteca/arquivos/como-autenticar-documentacao-api.pdf 
    <br>  
    ### Contratação 
    Para consumir a API é necessário utilizar as credenciais de acesso `CONSUMER KEY` e `CONSUMER SECRET` disponibilizados no portal do cliente https://cliente.serpro.gov.br
    <br> Exemplo de código:
    <br> `Consumer Key: djaR21PGoYp1iyK2n2ACOH9REdUb`
    <br>`Consumer Secret: ObRsAJWOL4fv2Tp27D1vd8fB3Ote`
    <br>
    ### Token de Acesso (Bearer) 
    Para consultar a API, é necessário obter um token de acesso temporário (Bearer). Esse token possui um tempo de validade e sempre que expirado, este passo de requisição de um novo token de acesso deve ser repetido.
    <br> Para solicitar o token temporário, é necessário realizar uma requisição HTTP POST para o endpoint Token (https://apigateway.serpro.gov.br/token), informando as credenciais de acesso no formato consumerKey:consumerSecret no HTTP Header Authorization, no formato base64, formato este que é utilizado para criptografar as credenciais de acesso e com isso garantir sigilo no tráfego de rede.
    <br> Após isso feito, será gerada uma chave hash (Bearer token) que deverá ser passada no header das requisições que serão efetuadas. Este header segue o seguinte formato: <br>
    `Authorization: Bearer <hash>`
    ### Payload
    Todo o conteúdo a ser enviado para a API do Loja Franca deverá ser assinado.
    <br>Porém, antes de enviar o conteúdo assinado, o mesmo deve seguir o Formato de mensagem JSON padrão. <br>
    <strong> <br> Formato de mensagem JSON padrão </strong>
    <br> A indicação de qual serviço será disparado se dará através do repasse do endpoint que representa cada serviço. 
    <br>
    #### Exemplo 
        {
         "servico": "// endpoint do serviço a ser chamado",
          "dados": {
            "// JSON de entrada de cada serviço"
          }
        }
    <strong> <br> Exemplo de entrada a assinar para a operação Processa venda viajante </strong>
    <br> O JSON segue o formato documentado por operação e o mesmo fica encapsulado dentro da propriedade "dados".
    #### Exemplo
        {
          "servico": "/venda",
          "dados" : {
            "valorTotalItensImportados": 10,
            "valorTotalItensNacionais": 0,
            "valorCotacaoLoja": 3.24,
            "viajanteParametro": {
              "cpf": "00000000191",
              "documento": {
                "codigoPaisOrigem": 105,
                "codigoTipo": 1,
                "numero": "12345"
              }
            }
          }
        }
    <strong> Exemplo de entrada assinada para a operação Processa venda viajante </strong> <br>
    O JSON foi assinado e criptografado em base64.
    #### Exemplo
        POST /api/
        HEADER
        Authorization: Bearer 953bae789a1726734005d238e939c978
        BODY/PAYLOAD
        MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgMFADCABgkqhkiG9w0BBwEAAKCAMIIG6jCCBNKgAwIBAgIDApVmMA0GCSqGSIb3DQEBCwUAMIGVMQswCQYDVQQGEwJCUjETMBEGA1UECgwKSUNQLUJyYXNpbDE7MDkGA1UECwwyU2VydmljbyBGZWRlcmFsIGRlIFByb2Nlc3NhbWVudG8gZGUgRGFkb3MgLSBTRVJQUk8xNDAyBgNVBAMMK0F1dG9yaWRhZGUgQ2VydGlmaWNhZG9yYSBkbyBTRVJQUk8gRmluYWwgdjUwHhcNMTcwODAyMTI0OTA2WhcNMjAwODAxMTI0OTA2WjCBoTELMAkGA1UEBhMCQlIxEzARBgNVBAoMCklDUC1CcmFzaWwxGTAXBgNVBAsMEFBlc3NvYSBGaXNpY2EgQTMxETAPBgNVBAsMCEFSU0VSUFJPMSswKQYDVQQLDCJBdXRvcmlkYWRlIENlcnRpZmljYWRvcmEgU0VSUFJPQUNGMSIwIAYDVQQDDBlMVUlaIENBUkxPUyBTSUxWRUlSQSBIT1BGMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAi8YM8VcBZq7DImG6dov33SR
    ### <br>Códigos de Retorno não Tarifados 
    |  Código de retorno |  Resumido |  Explicação |
    | ------------- |--------------------|----------------------------------------------------------------------------- |
    | &nbsp           | &nbsp    | &nbsp  | 
     |400           | Requisição inválida    | O parâmetro de entrada informado não é válido.       |
    | &nbsp           | &nbsp    | &nbsp  |
    | 404           | Not found    | O parâmetro de entrada informado não foi encontrado.  |
    | &nbsp           | &nbsp    | &nbsp  |
    | 500           | Erro no Servidor | Ocorreu algum erro no servidor.      |
    
    ### Padrões de Formatos e Tipos de Dados
    Os seguintes tipos de dados são utilizados pela API Integra Loja Franca:
    | Tipos | Descrição | Formato
    | ---------------------- | :------------------------------------------------------------- | ------------------ |
    | string        | Cadeia de caracteres |
    | string - data     | String com formato de data  | yyyy-MM-dd
    | string - data/hora | String com formato de data e hora | yyyy-MM-ddTHH:mm:ss
    | integer | Número inteiro que representa códigos e identificadores |
    | number | Número inteiro em situações que pode passar do valor 2^31-1 |
    | decimal | Número fracionado, sempre com duas casas após o decimal, separado por "." | Ex: 123456789012.22 (Exceto cotação do dólar, que pode ter até 3 casas após o decimal).
    ### Padrões de Formatos e Tipos de Erros - Negócio      
    São erros disparados pela API Integra Loja Franca de Fronteira quando há uma discordância entre os parâmetros enviados e as regras de negócio estabelecidas para as lojas francas. A resposta HTTP será:
    | Status Code | Descrição
    | --------------------------- | ---------------------------------------------- 
    | 422       | Erro de Negócio da Loja Franca 
    ----------------
    <br>
    **Atributos da resposta - Status code 422** <br/>
    | Nome     | Descrição                    | Tipo
    | -------- | ---------------------------- | -------
    | codigo   | Código que identifica o erro | integer
    | mensagem | Mensagem de Erro             | string
    ----------------
    <br>
    ### Padrões de Formatos e Tipos de Erros - Formatação
    São erros disparados pela API Integra Loja Franca de Fronteira quando há uma discordância na formatação/tipo de dados sugeridos pelos parâmetros enviados. A resposta será:
    | Status Code | Descrição
    | --------------------------- | ---------------------------------------------- 
    | 400       | Erro de fomatação dos parâmetros enviados 
    ----------------
    <br>
    **Atributos da resposta - Status code 422** <br/>
    | Nome     | Descrição                    | Tipo
    | -------- | ---------------------------- | -------
    | codigo   | Código que identifica o erro | integer
    | mensagem | Mensagem de Erro             | string
    ----------------
    <br> Independentemente do tipo de erro, as mensagens de erro podem conter uma TAG que visa facilitar o tratamento do erro caso a aplicação que esteja utilizando a API queira fazer algum tratamento específico, como por exemplo, uma extração de parâmetros a partir de uma mensagem de erro.   
    ### Tabelas de Formato/Tipo Produtos
      | Código | Descrição 
      | ----------- | ---------
      | 1         | Bebida alcoólica
      | 2         | Cigarro
      | 3         | Fumo
    ### Tabelas de Formato/Tipo Documentos
 
      | Código | Descrição | Código do País | País 
      | ------ | --------- | -------------- | ----
      | 1         | Passaporte | TODOS OS PAÍSES | 
      | 2         | Registro de Identidade Civil | 105 | Brasil
      | 3         | Cédula de Identidade AC | 105 | Brasil
      | 4         | Cédula de Identidade AL | 105 | Brasil
      | 5         | Cédula de Identidade AM | 105 | Brasil
      | 6         | Cédula de Identidade AP | 105 | Brasil
      | 7         | Cédula de Identidade BA | 105 | Brasil
      | 8         | Cédula de Identidade CE | 105 | Brasil
      | 9         | Cédula de Identidade DF | 105 | Brasil
      | 10        | Cédula de Identidade ES | 105 | Brasil
      | 11        | Cédula de Identidade GO | 105 | Brasil
      | 12        | Cédula de Identidade MA | 105 | Brasil
      | 13        | Cédula de Identidade MG | 105 | Brasil
      | 14        | Cédula de Identidade MS | 105 | Brasil
      | 15        | Cédula de Identidade MT | 105 | Brasil
      | 16        | Cédula de Identidade PA | 105 | Brasil 
      | 17        | Cédula de Identidade PB | 105 | Brasil
      | 18        | Cédula de Identidade PE | 105 | Brasil
      | 19        | Cédula de Identidade PI | 105 | Brasil
      | 20        | Cédula de Identidade PR | 105 | Brasil
      | 21        | Cédula de Identidade RJ | 105 | Brasil
      | 22        | Cédula de Identidade RN | 105 | Brasil
      | 23        | Cédula de Identidade RO | 105 | Brasil
      | 24        | Cédula de Identidade RR | 105 | Brasil
      | 25        | Cédula de Identidade RS | 105 | Brasil
      | 26        | Cédula de Identidade SC | 105 | Brasil
      | 27        | Cédula de Identidade SE | 105 | Brasil
      | 28        | Cédula de Identidade SP | 105 | Brasil
      | 29        | Cédula de Identidade TO | 105 | Brasil
      | 30        | Cédula de Identidade para estrangeiro | 105 | Brasil
      | 31        | Documento Nacional de Identidad | 63 | Argentina 
      | 32        | Cédula de Identidad | 586 | Paraguai
      | 33        | Cédula de Identidad | 845 | Uruguai
      | 34        | Cédula de Identidad | 845 | Venezuela
      | 35        | Cédula de Identidad para Nacionales | 97 | Bolívia
      | 36        | Cédula de Identidad para Extranjeros | 97 | Bolívia
      | 37        | Cédula de Identidad | 158 | Chile
      | 38        | Cédula de Ciudadanía | 169 | Colômbia
      | 39        | Tarjeta de Identidad | 169 | Colômbia
      | 40        | Cédula de Extranjería | 169 | Colômbia
      | 41        | Cédula de Ciudadanía | 239 | Equador
      | 42        | Cédula de Identidad para extranjeros | 239 | Equador
      | 43        | Documento Nacional de Identidad | 589 | Peru
      | 44        | Carné de Extranjería | 589 | Peru   
    ### Tabelas de Países
    'Ver [tabela de países da Receita Federal do Brasil](http://normas.receita.fazenda.gov.br/sijut2consulta/anexoOutros.action?idArquivoBinario=22672 "Tabela de países da Receita Federal do Brasil")' <br><br>
    ### Tabelas de Erros
      | Código | Mensagem
      | ------ | --------
      | 1   | Estrutura do JSON de entrada diferente da definição do serviço.
      | 2   | Chave obrigatória {0} sem conteúdo.
      | 3   | {0} com tamanho ou formato diferente da definição do serviço.
      | 4   | Certificado não foi informado, não é de Equipamento e/ou não é válido.
      | 9   | cnpjLoja {0} não existe como Loja.
      | 10  | cnpjLoja diferente do Certificado de Autenticação.
      | 11  | cnpjLoja {0} Suspenso.
      | 12  | cnpjLoja {0} Cancelado.
      | 13  | paisOrigem não localizado na Tabela de Países.
      | 14  | tipoDocumento inválido.
      | 15  | CPF inválido.
      | 16  | Viajante não localizado.
      | 17  | CPF obrigatório para brasileiros (paisOrigem = Brasil).
      | 18  | CPF diferente do CPF vinculado ao documento {0} através de venda no dia {1} .
      | 19  | CPF diferente do CPF vinculado ao documento {0} pela RFB.
      | 20  | dataNascimento e nomeNoDocumento obrigatórios para estrangeiro com CPF não informado.
      | 21  | Documento não pode ser vinculado ao CPF {0} pois desvinculado desse CPF pela RFB.
      | 22  | valorTotalItensImportados ou valorTotalItensNacionais deve ser maior que zero.
      | 23  | valorTotalItensNacionais não pode ser maior que saldo de cota: {0}
      | 24  | valorCotacaoLoja deve ser maior que zero.
      | 25  | produtoControleQuantitativo.codigoProduto {0} não localizado na Tabela de Produtos.
      | 26  | produtoControleQuantitativo.codigoProduto {0} já informado na venda.
      | 27  | produtoControleQuantitativo.quantidade deve ser maior que zero e não superior ao limite de {0} {1} .
      | 28  | produtoControleQuantitativo.valorTotalProdutos deve ser maior que zero.
      | 29  | Venda gera imposto inferior ao limite mínimo (R$ {0} ) para geração de DARF.
      | 30  | Somatório dos produtoControleQuantitativo.valorTotal maior que valorTotalItensImportados + valorTotalItensNacionais.
      | 31  | idVenda não localizado.
      | 32  | {0} DV inválido.
      | 33  | {0} emitida por CNPJ diferente da loja.
      | 34  | {0} já informada em outras operações.
      | 35  | {0} DV inválido.
      | 36  | {0} emitida por CNPJ diferente da loja.
      | 37  | {0} já informada em outras operações.
      | 38  | Venda foi entregue anteriormente.
      | 39  | Venda foi cancelada anteriormente.
      | 40  | Venda foi totalmente devolvida anteriormente.
      | 41  | Venda não foi entregue anteriormente.
      | 42  | produtoControleQuantitativo.codigoProduto {0} não informado na venda.
      | 43  | produtoControleQuantitativo.codigoProduto {0} já informado na devolução.
      | 44  | produtoControleQuantitativo.quantidade deve ser maior que zero e não superior ao saldo da venda.
      | 45  | produtoControleQuantitativo.valorTotal deve ser maior que zero e não superior ao saldo da venda.
      | 46  | valorTotalItensImportados + valorTotalItensNacionais maior que saldo da venda.
      | 47 | valorTotalItensNacionais maior que saldo da venda da produtos Nacionais.
      |48 | valorTotalItensImportados maior que saldo da venda de produtos Importados.
      | 52  | Data de nascimento diferente do {0}.
      | 54  | Venda desvinculada do Viajante.
      | 55  | CPF não localizado.
      | 56  | Data sem cotação do dólar.
      | 57  | Situação do CPF inválida.
      | 58  | notaFiscalSaida igual a notaFiscalEntrada
      | 59 | notaFiscalSaida não deve ser Informada.
      | 60 | Saldo da quantidade do produtoControleQuantitativo.codigoProduto {0} zerado sem zerar o valor total da venda deste produto.
      | 61 | Valor total do produtoControleQuantitativo.codigoProduto {0} zerado sem zerar a quantidade total vendida deste produto.
      | 62 | Ao zerar os valores totais para produtos Nacionais e Importados, é preciso zerar os produtos controlados da venda.
      | 63 | Saldo Final de Produtos Controlados Maior que Saldo Final Total da Venda.
      | 70 | Conteúdo do Payload é Invalido.
      | 99  | Erro no ambiente {0} . {1} .
      | -99  | Erro na comunicação com algum outro sistema externo que a API do Loja Franca de Fronteira se integra.
      ### Orientações:  
      Todas  as mensagens retornam `HTTP Status 422`, com exceção das mensagens `1` e `3`, que retornam `HTTP Status 400`. 
      <br> Todas as mensagens são encapsuladas conforme demonstrado no item `2 Padrões - Tratamento de erros`.
      <br> As mensagens aqui propostas são sugestões e não necessariamente precisam ser exibidas exatamente da forma como estão no sistema da loja franca que está consumindo a API do Loja Franca de Fronteira, ou seja, elas podem ser customizadas conforme a necessidade. 
      <br> As mensagens de erro `1, 2, 3, 4, 9, 10, 11, 12, 70` poderão ser disparadas independentemente da operação, pois são mensagens de validação de CNPJ e certificado digital da Loja e mensagens de erros gerais.   
    ### Payload C Sharp - Orientações para assinatura do payload na linguagem C#
      Faça download do arquivo [assinador-exemplo-serpro-csharp.zip](https://gitcorporativo.serpro/centro-api-11002/demandas/uploads/a3588a9f2cc8c70385d68ac8077f2dff/assinador-exemplo-serpro-csharp.zip) 
     <br>  O exemplo deste arquivo em C# para assinatura segui o padrão ADRB 2.2. <br> 
      ### Observações: 
      1- Este exemplo é uma aplicação standalone que utiliza a biblioteca BouncyCastle 1.8.3 (http://www.bouncycastle.org/csharp/). <br> 
      2- A variável entradaArray contém os dados de entrada simulado através de um arquivo neste exemplo. <br>
      3- O dado de saída que deverá ser utilizado na API Loja Franca é obtido da seguinte instrução no código de exemplo: Convert.ToBase64String(dadosAssinado.GetEncoded()
servers:
  - url: 'https://apigateway.serpro.gov.br/api-loja-franca-trial/api'
    description: Trial
  - url: 'https://apigateway.serpro.gov.br/api-loja-franca/api'
    description: Produção
security:
  - APIKEY: []
    OAuth2: []
    Authorization: []

components:
  schemas:
    EntradaCota: 
      type: string
      properties:
        payload:
          type: string
          description: payload em base 64
    SaidaCota:
      type: string 
      example: 'Json de saída referente ao método consultado.'
  securitySchemes:
    APIKEY:
      type: apiKey
      name: x-jwt-assertion
      in: header
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://apigateway.serpro.gov.br/token'
    Authorization:
      type: http
      description: Autenticação para ambiente trial
      scheme: bearer
