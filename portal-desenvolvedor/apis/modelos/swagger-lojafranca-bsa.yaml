openapi: 3.0.2
info:
  title: Loja Franca
  version: v1
  description: |- 
    O serviço &nbsp; *Integra Loja Franca* &nbsp; é disponibilizado através do &nbsp; *HTTP REST* &nbsp; oferencendo operações para o processo de vendas das Lojas Francas de Fronteira.
    ### Métodos da API Loja Franca
    * "Post - Consulta de Cota" - Retorna a cota disponível para um determinado viajante. &nbsp; Serviço: &nbsp; &nbsp; *viajante/cota*    
    
    
    * "Post - Consulta de Viajante" - Retorna o nome, data de nascimento e a data da última venda de um determinado viajante. &nbsp; Serviço: &nbsp; &nbsp; *viajante/consulta*
    
    
    * "Post - Consulta Cotação do Dólar" - Retorna a cotação do dólar de uma determinada data. &nbsp; Serviço: &nbsp; &nbsp; *cotacaoDolar?dataCotacao=2017-12-01 *


    * "Post - Processa Venda de Viajante" - Efetua uma operação de processamento de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda*
    
    
    * "Post - Entrega Venda para Viajante" - Efetua uma operação de entrega de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda/entrega?idVenda=2017000000020992652¬aFiscalSaida=35160400073132000143550012017000006572827920*
    
    
    * "Post - Cancela Venda de Viajante" - Efetua uma operação de cancelamento de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda/cancelamento?idVenda=2017000000020992652*
    
    
    * "Post - Devolução Parcial de Venda" - Efetua uma operação de devolução parcial de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda/devolucaoParcial*
    
    
    * "Post - Devolução Total de Venda" - Efetua uma operação de devolução total de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda/devolucao?idVenda=2017000000020992652¬aFiscalEntrada=42100484684182000157550010000000020108042108*
    
    
    * "Post - Troca Item Idêntico de Venda" - Efetua uma operação de troca de item idêntico de venda. &nbsp; Serviço: &nbsp; &nbsp; *venda/trocaItemIdentico*
    ### Códigos de Retorno não Bilhetados 
    | Código de retorno | Resumido | Explicação |
    | ------------- |:--------------------|:-----------------------------------------------------------------------------|
    | 400           | Requisição inválida | O parâmetro de entrada informado não é válido. |
    | 404           | Not found           | O parâmetro de entrada informado não foi encontrado.
    | 500           | Erro no servidor    | Ocorreu algum erro interno.      |     
    ### Solicitando assinatura com Carimbo de Tempo
      Caso deseje que sua solicitação venha com uma assinatura de Carimbo de Tempo, basta incluir, no cabeçalho de sua requisição, a informação: &nbsp; *x-signature:1*. &nbsp; A assinatura será retornada no cabeçalho da resposta, com o nome: &nbsp; *stamp* .
    ### Verificando assinatura com Carimbo de Tempo
      Para verificar assinatura de carimbo de tempo, siga as instruções da documentação abaixo:     
    [Documentação - Verificação de Carimbo de Tempo](https://rawgit.com/devserpro/apis/master/_layouts/swagger-ui-master/dist/index.html?bearer=4e1a1858bdd584fdc077fb7d80f39283&url=https://rawgit.com/devserpro/apis/master/_layouts/swaggers/carimbo-tempo/swagger-timestampcheck-trial-bsa.json#!/default/post_check)
servers:
  - url: 'https://apigateway.serpro.gov.br/api-loja-franca-trial/api'
    description: Trial
  - url: 'https://apigateway.serpro.gov.br/api-loja-franca/api'
    description: Produção
security:
  - APIKEY: []
    OAuth2: []
    Authorization: []   
externalDocs:
  description: "Detalhamento da API Loja Franca de Fronteiras"
  url: https://github.com/devserpro/apis/raw/master/portal-desenvolvedor/apis/documentos/Informacoes-LojaFranca.pdf
paths:
  '/status':
    get:
      tags:
        - Status
      summary: Verifica status da API
      responses:
        '200':
          description: Serviço disponível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
              example:
                lastUpdateAt: "2019-02-18T11:27:06-03:00"
        '500':
          description: Serviço indisponível
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Status'
              example:
                lastUpdateAt: "2019-02-18T11:27:06-03:00" 
      externalDocs:
        description: "Detalhamento da API Loja Franca de Fronteiras"
        url: https://github.com/devserpro/apis/raw/master/portal-desenvolvedor/apis/documentos/Informacoes-CPF.pdf                
components:
  schemas:
    Status:
      type: object
      properties:
        lastUpdateAt:
          type: string
          format: date-time   
    EntradaCota: 
      type: string
      properties:
        payload:
          type: string
          description: payload em base 64
    SaidaCota:
      type: string 
      example: 'Json de saída referente ao método consultado.'
  securitySchemes:
    APIKEY:
      type: apiKey
      name: x-jwt-assertion
      in: header
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: 'https://apigateway.serpro.gov.br/token'
    Authorization:
      type: http
      description: Autenticação para ambiente trial
      scheme: bearer
